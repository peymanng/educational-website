# Generated by Django 4.0.1 on 2022-02-22 07:07

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='عنوان')),
                ('slug', models.SlugField(allow_unicode=True, unique=True)),
                ('active', models.BooleanField(default=True, verbose_name='فعال/غیر فعال')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='courses.category')),
            ],
            options={
                'verbose_name': 'دسته بندی',
                'verbose_name_plural': 'دسته بندی ها',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=130, verbose_name='عنوان')),
                ('description', ckeditor.fields.RichTextField(verbose_name='توضیحات')),
                ('slug', models.SlugField(allow_unicode=True, unique=True)),
                ('active', models.BooleanField(default=True, verbose_name='فعال/غیر فعال')),
                ('price', models.PositiveIntegerField(verbose_name='قیمت')),
                ('discount', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='تخفیف')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='courses/course-img/', verbose_name='عکس')),
                ('level', models.CharField(choices=[('b', 'مقدماتی'), ('m', 'متوسط'), ('a', 'پیشرفته'), ('bm', 'مقدماتی تا متوسط'), ('ma', 'متوسط تا پیشرفته'), ('ba', 'مقدماتی تا پیشرفته')], default='b', max_length=2, verbose_name='سطح دوره')),
                ('is_finish', models.BooleanField(default=False, verbose_name='آیا دوره تمام شده؟')),
                ('categories', models.ManyToManyField(to='courses.Category', verbose_name='دسته بندی ها')),
                ('student', models.ManyToManyField(blank=True, related_name='student_courses', to=settings.AUTH_USER_MODEL, verbose_name='دانشجو')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='برچسب ها')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_courses', to=settings.AUTH_USER_MODEL, verbose_name='مدرس')),
            ],
            options={
                'verbose_name': 'دوره',
                'verbose_name_plural': 'دوره ها',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField()),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='عنوان جلسه')),
                ('video', models.FileField(upload_to='course/course-videos/', verbose_name='ویدیو')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='شماره جلسه')),
                ('description', models.TextField(verbose_name='توضیحات')),
                ('time', models.TimeField(help_text='مثال:00:00:30', verbose_name='زمان ویدیو')),
                ('publish_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='زمان انتشار')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='آیا نمایش داده شود؟')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video', to='courses.course', verbose_name='دوره')),
            ],
            options={
                'verbose_name': 'ویدیو',
                'verbose_name_plural': 'ویدیوها',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='visits',
            field=models.ManyToManyField(blank=True, related_name='visits', to='courses.IP'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(default=' ', verbose_name='بدنه')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='courses.course', verbose_name='دوره')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='courses.comment', verbose_name='والد')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'کامنت',
                'verbose_name_plural': 'کامنت ها',
                'ordering': ('-created',),
            },
        ),
    ]
